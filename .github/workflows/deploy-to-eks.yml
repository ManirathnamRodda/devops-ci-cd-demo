name: Build, Push to ECR, Deploy to EKS

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ github.sha }}
  ECR_IMAGE: ${{ secrets.ECR_REPO }}:${{ github.sha }}

jobs:
  deploy:
    name: Build → Push to ECR → Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build and Push Docker Image to ECR
      - name: Build and Push to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ env.ECR_IMAGE }}

      # Step 5: Replace ECR image in deployment.yaml
      - name: Replace ECR Image Tag in Deployment Manifest
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|${{ env.ECR_IMAGE }}|g" k8s/deployment.yaml

      # Step 6: Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      # Step 7: Update kubeconfig with EKS
      - name: Update kubeconfig with EKS Cluster
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name devops-ci-cd-cluster

      # Step 8: Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
